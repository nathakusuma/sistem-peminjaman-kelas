services:
  server:
    image: nginx:1.27-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./storage/logs/nginx:/var/log/nginx
    depends_on:
      backend:
        condition: service_started
      frontend:
        condition: service_started
    networks:
      - network
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/" ]
      interval: 10s
      timeout: 3s
      retries: 2
      start_period: 5s

  backend:
    image: nathakusuma/sistem-peminjaman-kelas-backend:latest
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./storage/logs/backend:/app/storage/logs
    networks:
      - network
    restart: on-failure

  frontend:
    image: nathakusuma/sistem-peminjaman-kelas-frontend:latest
    env_file:
      - .env
    depends_on:
      backend:
        condition: service_started
    networks:
      - network
    restart: on-failure

  db:
    image: postgres:17
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
      - PORT=${DB_PORT}
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - network
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      start_interval: 2s
      interval: 5s
      timeout: 2s
      retries: 3
      start_period: 10s

  swagger-ui:
    image: swaggerapi/swagger-ui:v5.24.0
    volumes:
      - ./docs/openapi.yaml:/usr/share/swagger/openapi.yaml
    environment:
      - SWAGGER_JSON=/usr/share/swagger/openapi.yaml
    ports:
      - "8080:8080"
    networks:
      - network
    restart: always

  migrate:
    image: migrate/migrate:4
    volumes:
      - ./database/migration:/migration
    networks:
      - network
    depends_on:
      db:
        condition: service_healthy
    restart: "no"

volumes:
  postgres:
    driver: local

networks:
  network:
    driver: bridge
